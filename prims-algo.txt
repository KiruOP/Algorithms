#include <stdio.h>
#include <stdbool.h>
#define V 5 
Int minKey(int key[], bool mstSet[]) {
 Int min = INT_MAX, min_index;
 For (int v = 0; v < V; v++) {
 If (!mstSet[v] && key[v] < min) {
 Min = key[v];
 Min_index = v;
 }
 }
 Return min_index;
}
Void printMST(int parent[], int graph[V][V]) {
 Printf(“Edge \tWeight\n”);
 For (int I = 1; I < V; i++) {
 Printf(“%d - %d \t%d \n”, parent[i], I, graph[i][parent[i]]);
 }
}
Void primMST(int graph[V][V]) {
 Int parent[V];
 Int key[V]; 
 Bool mstSet[V]; 
 For (int I = 0; I < V; i++) {
 Key[i] = INT_MAX;
 mstSet[i] = false;
 }
 Key[0] = 0; 
 Parent[0] = -1; 
 For (int count = 0; count < V – 1; count++) {
 Int u = minKey(key, mstSet);
 mstSet[u] = true;
 for (int v = 0; v < V; v++) {
 if (graph[u][v] && !mstSet[v] && graph[u][v] < key[v]) {
 parent[v] = u;
 key[v] = graph[u][v];
 }
 }
 }
 printMST(parent, graph);
}
Int main() {
 Int graph[V][V] = {{0, 2, 0, 6, 0},
 {2, 0, 3, 8, 5},
 {0, 3, 0, 0, 7},
 {6, 8, 0, 0, 9},
 {0, 5, 7, 9, 0}};
 primMST(graph);
 return 0;
}